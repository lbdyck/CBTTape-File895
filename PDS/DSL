/* REXX **************************************************************/
/* MEMBER : DSL                                                      */
/*                                                                   */
/* DESCRIPTION:                                                      */
/* REXX to work with the DSLIST (=3.4).                              */
/* Must be called from within DSLIST.                                */
/* To fill up all fields in the DSLIST panel, you must scroll to the */
/* left (or right) and to the bottom.                                */
/* %DSL X parm=value : eXclude Datasets from the list. parm can be   */
/*                     EXT (for extents), ORG, RECFM, LRECL, BLKSIZ  */
/*                     (for which the value must match) and CAT, VOL,*/
/*                     CDATE, EDATE, RDATE, DSN (for which value only*/
/*                     needs to be included). Always all matching    */
/*                     datasets will be excluded.                    */
/*                                                                   */
/* %DSL FLIP         : like FLIP in the editor you flip between      */
/*                     excluded and visible.                         */
/*                                                                   */
/* %DSL HR           : HSM RECALL will be send for all visible       */
/*                     migrated datasets. This is just an example    */
/*                     how to work with the DSLIST table.            */
/*                                                                   */
/* Example: Exclude all PDS  %DSL X ORG=PO                           */
/*                                                                   */
/* AUTHOR : Rainer Nowak                                             */
/* DATE   : 30.05.2013                                               */
/* UPDATE : 23.02.2015                                               */
/*                                                                   */
/*********************************************************************/
ARG p1 p2
SELECT
   WHEN p1 = 'X' THEN CALL Wue_DSL_X
   WHEN p1 = 'HR' THEN CALL Wue_DSLHR
   WHEN p1 = 'FLIP' THEN CALL Wue_DSL_Flip
   OTHERWISE DO
    SAY 'WRONG PARM. ONLY X, HR OR FLIP ARE ALLOWED.'
   END
END
EXIT
/* ================================================================= */
/* === Subroutins ================================================== */
/* ================================================================= */

/* ================================================================= */
/* Pointer function                                                  */
/* ================================================================= */
PTR: RETURN C2D(STORAGE(D2X(ARG(1)),ARG(2)))
/* ================================================================= */
/* Routine to search all open tables - the heart of this REXX        */
/* ================================================================= */
/* get_OTab                                                          */
/* search the open tables of this ISPF screen.                       */
/*                                                                   */
/* The table of 3.4 has the name DSLnnnnn with variables:            */
/* ZUDSNS       ZUSIZE       ZUUS         ZUCDATE      ZUEDATE       */
/* ZURDATE      ZUDVOL       ZUDMVOL      ZUDEVICE     ZUCDAT2       */
/* ZUEDAT2      ZURDAT2      ZUORG        ZUX          ZURECFM       */
/* ZULRECL      ZUBLKSIZ     ZUSTAT       ZUDSPACU     ZULMSG        */
/* ZULOCVOL     ZUOBTATT     ZUOBTSPC     ZUOBTDAT     ZUDXSTAT      */
/* ZULCMDL      ZUD20V       ZUDVOL7      ZUCATNAM     ZUSIZEX       */
/* ZUXX         ZUOVF        ZUGFLAG      ZUEATR                     */
/* ================================================================= */
get_OTab:
/* get all open tables            */
"ISPEXEC QTABOPEN LIST(myvar)"
otnr = 0
otab.0 = otnr
do i = 1 to myvar0
   INTERPRET 'tab = myvar'i
   "ISPEXEC TBSTATS "tab" STATUS2(stat)"
   if stat > 1 & stat <= 5 then do  /* table is open in this screen? */
      otnr = otnr + 1
      otab.0 = otnr
      otab.otnr = tab
   end
end
/* Status2:
1 table is not open in this logical screen
2 table is open in NOWRITE mode in this logical screen
3 table is open in WRITE mode in this logical screen
4 table is open in SHARED NOWRITE mode in this logical screen
5 table is open in SHARED WRITE mode in this logical screen
*/
RETURN
/* ================================================================= */
/* Routine to exclude datasets from the list                         */
/* ================================================================= */
Wue_DSL_X:
CALL get_OTab
if otab.0 > 0 then do
   tbl = ''
   do i = 1 to otab.0
      if LEFT(otab.i,3) = 'DSL' then do
         tbl = otab.i
         i = otab.0 + 1
      end
   end
   if LEFT(tbl,3) = 'DSL' then do
      CALL X_parm
      IF parm = 'NIX' THEN DO
         "ISPEXEC SETMSG MSG(ISRZ001)"
         EXIT
      END
      ADDRESS ISPEXEC
      'CONTROL ERRORS RETURN'
      'TBTOP' tbl
      IF rc>0 THEN DO
         ZEDLMSG="TBTOP failed for table" tbl "RC="rc
         "ISPEXEC SETMSG MSG(ISRZ001)"
         EXIT 8
      END
      rows=0;processed=0                           /* Init counters */
      DO FOREVER
        'TBSKIP' tbl                               /* NEXT ROW      */
         IF rc>0 THEN LEAVE
         'TBGET' tbl                               /* SET VARIABLES */
         IF rc>0 THEN LEAVE
         rows=rows+1                               /* count rows    */
         IF zudxstat = 'N' THEN DO
            IF parm = 'ALL' THEN DO
               zudxstat = 'Y'
               'TBPUT' tbl                         /* PUT VARIABLES */
               IF RC = 0 THEN processed=processed + 1
            END
            ELSE DO
             IF match = 'IN' THEN DO
               IF POS(matchvalue,VALUE(parm)) > 0 THEN DO
                  zudxstat = 'Y'
                  'TBPUT' tbl                      /* PUT VARIABLES */
                  IF RC = 0 THEN processed=processed + 1
               END
             END
             ELSE DO
               IF VALUE(parm) = matchvalue THEN DO
                  zudxstat = 'Y'
                  'TBPUT' tbl                      /* PUT VARIABLES */
                  IF RC = 0 THEN processed=processed + 1
               END
             END
            END
         END
      END
      ZEDLMSG="EXCLUDE for "processed" of "rows" datasets performed."
      IF processed = 0 THEN DO
         ZEDLMSG=ZEDLMSG||" Use LEFT and DOWN to fill up the fields|"
      END
      ZEDSMSG="EXCLUDE performed||"
      "ISPEXEC SETMSG MSG(ISRZ001)"
      "ISPEXEC CONTROL NONDISPL ENTER" /* skip one ENTER         */
   end
   else do
      ZEDLMSG="DSL X must be called in DSLIST (=3.4)."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      EXIT 8
   end
end
else do
   ADDRESS ISPEXEC
   ZMSG000S = 'No open tables'
   ZMSG000L = 'No open tables can be found.'
   "SETMSG MSG(ISPZ000)"
end
RETURN
/* ================================================================= */
/* Routine to validate parm=value in DSL X parm=value                */
/* ================================================================= */
X_parm:
IF p2 = '' THEN DO
   parm = 'ALL'
END
ELSE DO
   PARSE VAR p2 parm '=' matchvalue
   match = 'IN'
   SELECT
      WHEN parm = 'VOL' THEN DO   /* Volser                          */
         parm = 'ZUDVOL7'
      END
      WHEN parm = 'EXT' THEN DO   /* Extents                         */
         parm = 'ZUX'
         match = 'EQ'
      END
      WHEN parm = 'ORG' THEN DO   /* Dataset organisation            */
         parm = 'ZUORG'
         match = 'EQ'
      END
      WHEN parm = 'RECFM' THEN DO   /* Recordformat                  */
         parm = 'ZURECFM'
         match = 'EQ'
      END
      WHEN parm = 'LRECL' THEN DO   /* Recordlength                  */
         parm = 'ZULRECL'
         match = 'EQ'
      END
      WHEN parm = 'BLKSIZ' THEN DO   /* Blocksize                    */
         parm = 'ZUBLKSIZ'
         match = 'EQ'
      END
      WHEN parm = 'CAT' THEN parm = 'ZUCATNAM'   /* Catalogname      */
      WHEN parm = 'CDATE' THEN parm = 'ZUCDATE'  /* Creation Date    */
      WHEN parm = 'EDATE' THEN parm = 'ZUEDATE'  /* Expiration Date  */
      WHEN parm = 'RDATE' THEN parm = 'ZURDATE'  /* Last Reference   */
      WHEN parm = 'DSN' THEN parm = 'ZUDSNS'     /* Dataset name     */
      OTHERWISE DO
         ZEDLMSG="Wrong Parm :"parm
         parm = 'NIX'
      END
   END
END
RETURN
/* ================================================================= */
/* Routine to flip between excluded and visible                      */
/* ================================================================= */
Wue_DSL_Flip:
CALL get_OTab
if otab.0 > 0 then do
   tbl = ''
   do i = 1 to otab.0
      if LEFT(otab.i,3) = 'DSL' then do
         tbl = otab.i
         i = otab.0 + 1
      end
   end
   if LEFT(tbl,3) = 'DSL' then do
      ADDRESS ISPEXEC
      'CONTROL ERRORS RETURN'
      'TBTOP' tbl
      IF rc>0 THEN DO
         ZEDLMSG="TBTOP failed for table" tbl "RC="rc
         "ISPEXEC SETMSG MSG(ISRZ001)"
         EXIT 8
      END
      rows=0;processed=0                           /* Init counters */
      DO FOREVER
        'TBSKIP' tbl                               /* NEXT ROW      */
         IF rc>0 THEN LEAVE
         'TBGET' tbl                               /* SET VARIABLES */
         IF rc>0 THEN LEAVE
         rows=rows+1                               /* count rows    */
         IF zudxstat = 'N' THEN DO
            zudxstat = 'Y'
         END
         ELSE DO
            zudxstat = 'N'
         END
         'TBPUT' tbl                               /* PUT VARIABLES */
         IF RC = 0 THEN processed=processed + 1
      END
      ZEDLMSG="FLIP for "processed" of "rows" datasets performed."
      ZEDSMSG="FLIP performed||"
      "ISPEXEC SETMSG MSG(ISRZ001)"
      "ISPEXEC CONTROL NONDISPL ENTER" /* skip one ENTER             */
   end
   else do
      ZEDLMSG="DSL FLIP must be called in DSLIST (=3.4)."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      EXIT 8
   end
end
else do
   ADDRESS ISPEXEC
   ZMSG000S = 'No open tables'
   ZMSG000L = 'No open tables can be found.'
   "SETMSG MSG(ISPZ000)"
end
RETURN
/* ================================================================= */
/* Routine to RECALL a list of datasets                              */
/* ================================================================= */
Wue_DSLHR:
CALL get_OTab
if otab.0 > 0 then do
   tbl = ''
   do i = 1 to otab.0
      if LEFT(otab.i,3) = 'DSL' then do
         tbl = otab.i
         i = otab.0 + 1
      end
   end
   if LEFT(tbl,3) = 'DSL' then do
      ADDRESS ISPEXEC
      'CONTROL ERRORS RETURN'
      'TBTOP' tbl
      IF rc>0 THEN DO
         ZEDLMSG="TBTOP failed for table" tbl "RC="rc
         "ISPEXEC SETMSG MSG(ISRZ001)"
         EXIT 8
      END
      rows=0;processed=0                           /* Init counters */
      DO FOREVER
        'TBSKIP' tbl                               /* NEXT ROW      */
         IF rc>0 THEN LEAVE
         'TBGET' tbl                               /* SET VARIABLES */
         IF rc>0 THEN LEAVE
         rows=rows+1                               /* count rows    */
         IF LEFT(zudvol7,6) = 'MIGRAT' & zudxstat = 'N' THEN DO
            dsn = STRIP(zudsns,'B',' ')
            ret = Wue_HR_Func(dsn)
            IF ret = 9 THEN DO
               say "Dataset "dsn" is not migrated."
            END
            processed=processed + 1
         END
      END
      ZEDLMSG="RECALL for "processed" of "rows" datasets was send."
      "ISPEXEC SETMSG MSG(ISRZ001)"
   end
   else do
      ZEDLMSG="DSL HR must be called in DSLIST (=3.4)."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      EXIT 8
   end
end
else do
   ADDRESS ISPEXEC
   ZMSG000S = 'No open tables'
   ZMSG000L = 'No open tables can be found.'
   "SETMSG MSG(ISPZ000)"
end
RETURN
/* ================================================================= */
/* Function to send HRECALL for one dataset                          */
/* ================================================================= */
Wue_HR_Func:
PROCEDURE
ARG dsn
pref = SYSVAR(SYSPREF)
ADDRESS TSO
"profile noprefix"
retcode = LISTDSI("'"dsn"' DIRECTORY SMSINFO NORECALL")
if SYSREASON = 9 then do   /* dataset migrated */
   "HRECALL ('"dsn"') NOWAIT"
   ret = RC
end
else do
   ret = 9
END
ADDRESS TSO
if pref = '' then "profile noprefix"
else "profile prefix("pref")"
return ret
