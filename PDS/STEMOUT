//GILBERTV JOB (ACCT#),STEMOUT,                                         00001000
// NOTIFY=&SYSUID,                                                      00002000
// CLASS=A,MSGCLASS=H,COND=(0,NE)                                       00003000
//HLASM EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)         00004000
***********************************************************************
*                                                                     *
* MODULE NAME = STEMOUT                                               *
*                                                                     *
* DESCRIPTIVE NAME = Write REXX Variables to Dataset.                 *
*                                                                     *
* STATUS = R100                                                       *
*                                                                     *
* FUNCTION = This assembler sub-routine can be invoked by a REXX      *
*            EXEC to write the REXX variables to a dataset. Dataset   *
*            must be PS, FB, 1024 and allocated to DD-name STEMOUT.   *
*            STEMOUT is supposed to be used in batch. In ISPF you     *
*            can use STEMEDIT.                                        *
*                                                                     *
* AUTHOR = Rainer Nowak                                               *
*                                                                     *
* ENVIRONMENT = SEE BELOW                                             *
*                                                                     *
*    DEPENDENCIES: OS/390 R10 or z/OS                                 *
*                                                                     *
* MODULE TYPE = PROCEDURE, (CSECT TYPE)                               *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    ATTRIBUTES =              RMODE ANY, AMODE 31,                   *
*                 PROBLEM STATE, KEY 8                                *
*                 APF AUTHORIZATION: NONE                             *
*                                                                     *
* SYNTAX  =  See below                                                *
*                                                                     *
*    CALL STEMOUT                                                     *
*                                                                     *
*    Arguments:     none                                              *
*                                                                     *
*                                                                     *
* RETURN-CODES = See below                                            *
*                                                                     *
*        The STEMOUT  function returns a return code that indicates   *
*        whether the display worked.  The returned value is           *
*        contained in the RC special variable.                        *
*                                                                     *
*        The following STEMOUT  return code values are possible:      *
*                                                                     *
*        0    The display was successful.                             *
*                                                                     *
*        16                            .                              *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
* 100 Initial release                                            2019 *
*                                                                     *
&REL     SETC  'R100'                                                 *
***********************************************************************
STEMOUT  CSECT
STEMOUT  RMODE 24                      For PUT
STEMOUT  AMODE 31
&D       SETC  '&SYSDATE'(7,2)'-'.'&SYSDATE'(1,2)'-'.'&SYSDATE'(4,2)
         SAVE  (14,12),,'STEMOUT &REL - 20&D &SYSTIME'
         LR    R12,R15
         USING STEMOUT,R12
*---------------------------------------------------------------------*
*                                                                     *
*        ALLOCATE DYNAMIC STORAGE                                     *
*                                                                     *
*---------------------------------------------------------------------*
         GETMAIN RU,LV=DYNAML,         Allocate Dynamic Storage Area   X
               LOC=BELOW,              24-bit address for PUT          X
               BNDRY=PAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LA    R14,72(,R1)             CLEAR WORKING STORAGE
         LA    R15,DYNAML-72           CLEAR WORKING STORAGE
         SLR   R1,R1                   CLEAR WORKING STORAGE
         MVCL  R14,R0                  CLEAR WORKING STORAGE
         LM    R13,R1,8(R13)           SET R13, RELOAD R1
         USING DYNAM,R13
         STM   R15,R1,R15R0R1          save regs for cmd rtne
         L     R11,EFPLARG-EFPL(,R1)   ADDR OF ARG LIST
         MVI   BLANKS,C' '             a bunch of blanks
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
         MVI   STEMCOUNT,1             default count: X'01000000'
         GETMAIN RU,LV=L'LINE+256,     Alloc Dynamic Storage Area      X
               BNDRY=PAGE
         STM   R0,R1,LINE_LEN_ADDR     Save length/address
         LR    R9,R1                   Copy A(LINE)
         USING LINE_DSECT,R9
*---------------------------------------------------------------------*
*                                                                     *
*        BUILD THE SHVBLOCK                                           *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R10,DYNAM_SHVB
         USING SHVBLOCK,R10
         MVI   SHVCODE,SHVNEXTV        FETCH NEXT VARIABLE
         LH    R0,=Y(L'LINE)           LENGTH OF 'FETCH' VALUE BUFFER
         ST    R0,SHVBUFL              LENGTH OF 'FETCH' VALUE BUFFER
         LA    R0,1024                 default lrecl
         ST    R0,LRECL                default lrecl
         MVC   RECFM,=C'FB'            default RECFM is F
         LA    R0,LINE                 ADDRESS OF VALUE BUFFER
         ST    R0,SHVVALA              ADDRESS OF VALUE BUFFER
         LA    R0,VARNAME              ADDRESS OF VARIABLE NAME
         ST    R0,SHVNAMA              ADDRESS OF VARIABLE NAME
         L     R15,ADDR_OF_ENVBLOCK    Environment block
         CLC   =C'ENVBLOCK',0(R15)     Invoked from REXX?
         BNE   NOREXX                  no, quit
         L     R15,ENVBLOCK_IRXEXTE-ENVBLOCK(,R15) A(IRXEXTE)
         L     R15,IRXEXCOM-IRXEXTE(,R15)          A(IRXEXCOM)
         L     R0,ADDR_OF_ENVBLOCK     ENVIRONMENT BLOCK
         LA    R1,IRXEXCOM_PARM        parm list
         STM   R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)
         LA    R14,=C'IRXEXCOM'        Shared Variable Routine
         SLR   R15,R15                 PARM2=0
         SLR   R0,R0                   PARM3=0
         LA    R1,SHVBLOCK             PARM4
         STM   R14,R1,IRXEXCOM_PARM    build parm list for IRXEXCOM
         OI    IRXEXCOM_PARM+12,X'80'  VL=1
*---------------------------------------------------------------------*
*        OPEN DATASET                                                 *
*---------------------------------------------------------------------*
         OPEN  MF=(E,XOPEN),MODE=24                                     00950000
*
         MVI   LVARNL,C' '             Clear LVARNL
         MVC   LVARNL+1(255),LVARNL
         MVI   LVARNL+256,C' '             Clear LVARNL
         MVC   LVARNL+257(255),LVARNL
         MVI   LVARNL+512,C' '             Clear LVARNL
         MVC   LVARNL+513(255),LVARNL
         MVI   LVARNL+768,C' '             Clear LVARNL
         MVC   LVARNL+769(255),LVARNL
         MVC   LINEAL(L'TITLE),TITLE   default title
         PUT   OUTDAT,LINEAL                                            01190000
*---------------------------------------------------------------------*
*                                                                     *
*        Invoke IRXEXCOM                                              *
*                                                                     *
*---------------------------------------------------------------------*
         CLI   SHVRET,SHVLVAR          last variable to fetch?
         BE    GOBACK                  yes, exit
*loop
RDRTN84  EQU   *
         CLI   SHVRET,SHVLVAR          last variable to fetch?
         BE    GOBACK                  yes, exit
         BAL   R14,FETCHVAR         <- retrieve stemmed variable
*check for empty variable generally created with:  stem. = ' '
*        OC    SHVVALL,SHVVALL         length=0 ?
*        BZ    GOBACK                  yes, exit
         CLI   SHVRET,SHVCLEAN         OK?
         BNE   GOBACK
RDRTN70  L     R0,SHVVALA              DATA ADDRESS
         L     R1,SHVVALL              DATA LENGTH
         MVI   LVARNL,C' '             Clear LVARNL
         MVC   LVARNL+1(255),LVARNL
         L     R3,SHVNAML              length of variable name
         CL    R3,=F'255'              var name longer than 255?
         BH    RDRTN71M                if longer jump
         BCTR  R3,0                    prepare "EX"
         MVC   LVARNL(*-*),VARNAME     move variable name
         EX    R3,*-6                  execute MVC
         B     RDRTN71N
RDRTN71M EQU   *
         MVC   LVARNL(254),VARNAME     move variable name
         MVI   LVARNL+254,C'*'         move * to end of var name
RDRTN71N EQU   *
         MVI   LVARNL+255,C'='         move = after var name
         LA    R3,256                  R3=256
         LA    R14,LINE                "to" address
         L     R15,LRECL               "to" length
         SR    R15,R3                  length - 256
         ICM   R1,B'1000',BLANKS       padding
         MVCL  R14,R0                  move data to LINE
RDRTN74  EQU   *
         PUT   OUTDAT,LINEAL                                            01190000
         B     RDRTN84                 try next variable
*endloop
*---------------------------------------------------------------------*
*                                                                     *
*        Set return code                                              *
*                                                                     *
*---------------------------------------------------------------------*
GOBACK   EQU   *
         LTR   R7,R15                  OK?
         BZ    GOBACK40                yes, jump
         CH    R7,=H'4'                Severe error?
         BH    GOBACK16                yes, RC=16
         SLR   R7,R7                   no, RC=0
         B     GOBACK40
*---------------------------------------------------------------------*
*                                                                     *
*        Pass return code in RC variable                              *
*                                                                     *
*---------------------------------------------------------------------*
GOBACK16 LA    R7,16
GOBACK40 EQU   *
         LA    R0,WORK80               ADDRESS OF VALUE BUFFER
         ST    R0,SHVVALA              ADDRESS OF VALUE BUFFER
         CVD   R7,DWD                  convert to decimal
         OI    DWD+7,15                convert to decimal
         UNPK  WORK80(5),DWD           convert to decimal
         LA    R15,5                   LENGTH OF VARIABLE NAME
         ST    R15,SHVVALL             length
         MVC   VARNAME(2),=C'RC'       variable name
         LA    R15,2                   LENGTH OF VARIABLE NAME
         ST    R15,SHVNAML             LENGTH OF VARIABLE NAME
         LA    R0,VARNAME              ADDRESS OF VARIABLE NAME
         ST    R0,SHVNAMA              ADDRESS OF VARIABLE NAME
         MVI   SHVCODE,SHVSTORE        STORE VARIABLE
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)
         BALR  R14,R15              <- Store REXX variable "RC"
         SLR   R7,R7                   RC=0
         CLOSE MF=(E,XCLOSE),MODE=24                                    01820000
         B     EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        STEMOUT  was not invoked from a REXX exec                    *
*                                                                     *
*---------------------------------------------------------------------*
NOREXX   EQU   *
         LA    R7,20                   RC=20
         B     EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        CLEAN-UP AND EXIT                                            *
*                                                                     *
*---------------------------------------------------------------------*
EXIT     LM    R0,R1,LINE_LEN_ADDR     Load length/address
         FREEMAIN RU,LV=(R0),A=(R1)    Free Dynamic Storage Area
         LR    R1,R13                  A(DYNAM)
         L     R13,4(,R13)
         FREEMAIN RU,LV=DYNAML,A=(R1)  Free Dynamic Storage Area
         LR    R15,R7                  pass return code
         RETURN (14,12),RC=(15)
*---------------------------------------------------------------------*
*                                                                     *
*        Fetch value of a variable                                    *
*                                                                     *
*---------------------------------------------------------------------*
*
FETCHVAR EQU   *
         LA    R0,255
         ST    R0,SHVUSER              Length of varname buffer
         ST    R0,SHVNAML              LENGTH OF VARIABLE NAME
         LM    R15,R1,IRXEXCOM_REGS    A(IRXEXCOM,ENVBLK,IRXPARM)
         BR    R15                     FETCH VARIABLE
         DROP
***********************************************************************
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
***********************************************************************
HEXTAB   DC    C'0123456789ABCDEF'
XOPEN    OPEN  (OUTDAT,(OUTPUT)),MODE=24,MF=L                           02400000
XCLOSE   CLOSE (OUTDAT),MODE=24,MF=L                                    02410000
TITLE    DC    C'****** REXX Variables *****' Title
         EJECT                                                          02420000
******************************************************************      02430000
*         ----- D A T E I - D E F I N I T I O N -----            *      02450000
******************************************************************      02470000
OUTDAT   DCB   DDNAME=STEMOUT,DSORG=PS,MACRF=(PM),                     +01880004
               LRECL=1024,BLKSIZE=30720,                               +01880004
               RECFM=FB                                                 01890004
         EJECT                                                          02590000
***********************************************************************
*                                                                     *
*        Dynamic Storage Area - LOC=BELOW                             *
*                                                                     *
***********************************************************************
DYNAM    DSECT
         DS    18F                     MAIN-LINE
SAVE2    DS    18F                     Save area for cmd rtne
SAVE3    DS    18F                     Save area for read/write rtnes
*
DWD      DS    D                       work area for CVB/CVD
R15R0R1  DS    A(R15,R0,R1)            regs at entry to STEMOUT
ADDR_OF_ENVBLOCK EQU R15R0R1+4,4,C'A'  ENVIRONMENT BLOCK
RECFM    DS    C'FB'                   record format
CURRECNO DS    F                       first element (3rd arg)
STEMCOUNT DS   F                       number of variables (4th arg)
LRECL    DS    F                       record length (7th arg)
LINE_LEN_ADDR DS F,A(LINE_DSECT)       length and address of LINE fld
IRXEXCOM_REGS DS A(R15,R0,R1)          IRXEXCOM
IRXEXCOM_PARM DS 4A                    IRXEXCOM
IRXSTK_PARM DS 6A                      IRXSTK
DYNAM_SHVB DS  XL(SHVBLEN)             SHVB (IRXEXCOM)
RETCODE  DS    F                       RETURN CODE
VALUE    DS    F                       VALUE RETURNED BY FUNCTION
VARNAME  DS    CL255                   variable name
ZERRMSG  DS    CL8                     error message
WORK80   DS    CL80                    work area
BLANKS   DS    CL256                   a bunch of blanks
DYNAML   EQU   *-DYNAM
*
LINE_DSECT DSECT                       RMODE=31
LINEAL   DS    0CL1024                 Line
LVARNL   DS    CL256                   varname
LINE     DS    CL768
*
         PRINT NOGEN
         IRXEFPL DSECT=YES             External Function Parm List
         IRXENVB                       Environment Block
         IRXEXTE                       External Function Entry Points
         IRXSHVB                       Shared REXX Variable Req Block
         YREGS                         Register Equates (R0-R15)
         END
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                                  09451000
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)                                    09451100
//SYSPRINT DD SYSOUT=*                                                  09451200
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),BLKSIZE=3200          09451300
//*                                                                     09451400
//LKED    EXEC PGM=IEWL,PARM='LIST,MAP,RENT,REFR'                       09451500
//SYSLIN   DD DSN=*.HLASM.SYSLIN,DISP=(OLD,DELETE)                      09451600
//SYSPRINT DD SYSOUT=*                                                  09452000
//SYSLMOD  DD DSN=GILBERT.FILE183.LOAD(STEMOUT),DISP=SHR                09460000
